//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Browser.numberGuessProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback secretNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkNumberOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Browser.Properties.Settings.Default.Browser_numberGuessProxy_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event secretNumberCompletedEventHandler secretNumberCompleted;
        
        /// <remarks/>
        public event checkNumberCompletedEventHandler checkNumberCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/secretNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void secretNumber(int lower, [System.Xml.Serialization.XmlIgnoreAttribute()] bool lowerSpecified, int upper, [System.Xml.Serialization.XmlIgnoreAttribute()] bool upperSpecified, out int secretNumberResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool secretNumberResultSpecified) {
            object[] results = this.Invoke("secretNumber", new object[] {
                        lower,
                        lowerSpecified,
                        upper,
                        upperSpecified});
            secretNumberResult = ((int)(results[0]));
            secretNumberResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void secretNumberAsync(int lower, bool lowerSpecified, int upper, bool upperSpecified) {
            this.secretNumberAsync(lower, lowerSpecified, upper, upperSpecified, null);
        }
        
        /// <remarks/>
        public void secretNumberAsync(int lower, bool lowerSpecified, int upper, bool upperSpecified, object userState) {
            if ((this.secretNumberOperationCompleted == null)) {
                this.secretNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsecretNumberOperationCompleted);
            }
            this.InvokeAsync("secretNumber", new object[] {
                        lower,
                        lowerSpecified,
                        upper,
                        upperSpecified}, this.secretNumberOperationCompleted, userState);
        }
        
        private void OnsecretNumberOperationCompleted(object arg) {
            if ((this.secretNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.secretNumberCompleted(this, new secretNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/checkNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string checkNumber(int userNum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userNumSpecified, int secretNum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool secretNumSpecified) {
            object[] results = this.Invoke("checkNumber", new object[] {
                        userNum,
                        userNumSpecified,
                        secretNum,
                        secretNumSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkNumberAsync(int userNum, bool userNumSpecified, int secretNum, bool secretNumSpecified) {
            this.checkNumberAsync(userNum, userNumSpecified, secretNum, secretNumSpecified, null);
        }
        
        /// <remarks/>
        public void checkNumberAsync(int userNum, bool userNumSpecified, int secretNum, bool secretNumSpecified, object userState) {
            if ((this.checkNumberOperationCompleted == null)) {
                this.checkNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckNumberOperationCompleted);
            }
            this.InvokeAsync("checkNumber", new object[] {
                        userNum,
                        userNumSpecified,
                        secretNum,
                        secretNumSpecified}, this.checkNumberOperationCompleted, userState);
        }
        
        private void OncheckNumberOperationCompleted(object arg) {
            if ((this.checkNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkNumberCompleted(this, new checkNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void secretNumberCompletedEventHandler(object sender, secretNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class secretNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal secretNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int secretNumberResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool secretNumberResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void checkNumberCompletedEventHandler(object sender, checkNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591